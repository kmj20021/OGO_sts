<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">

	<select id="login" parameterType="HashMap" resultType="MemberDTO" >
    	select *
    	from member
    	where userId = #{userId} and userPasswd = #{userPasswd}
    </select>
	<insert id="memberAdd" parameterType="MemberDTO">
	   insert into member 
	   values( #{userId} , #{userPasswd} , #{userName} , #{nickname}, #{gender} , #{birth}, #{phone1}, #{phone2}, #{phone3}, #{post}, #{address1}, #{address2}, #{email1}, #{email2}, #{profilePhoto}, #{hobby} )
    </insert>
   
    <select id="idCheck" parameterType="String" resultType="String" >
    	select count(*) 
    	from member 
    	where userId = #{userId}
    </select>
    
    <select id="nicknameCheck" parameterType="String" resultType="String" >
    	select count(*) 
    	from member 
    	where nickname = #{nickname}
    </select>
    
	<select id="selectAllMember" resultType="MemberDTO">
     select * from member order by userId asc
	</select>

	<delete id="deleteByMember" parameterType="string">
	 delete 
	 from member
	 where userId = #{userId}
	</delete>

     <delete id="deleteByAllMember" parameterType="arraylist">
	    delete from member 
	    where userId IN
		    <foreach item="userId"  collection="list" open="(" separator="," close=")">
		   		 #{userId}    
		    </foreach>
 	 </delete> 
 	 
 	 
 	 <select id="mypage" parameterType="String" resultType="MemberDTO">
   select *
    	from member
    	where userId = #{userId}
   </select> 
 	 
 	 
 	 <update id="memberUpdate"  parameterType="MemberDTO">
 	 
 	 update member set 
 	 userPasswd = #{userPasswd},
 	 <!-- userName = #{userName}, -->
 	 nickname = #{nickname},
 	 <!-- birth = #{birth}, -->
 	 phone1 = #{phone1},
 	 phone2 = #{phone2},
 	 phone3 = #{phone3},
 	 post = #{post},
 	 address1 = #{address1},
 	 address2 = #{address2},
 	 email1 = #{email1},
 	 email2 = #{email2}
<!-- profilePhoto = #{profilePhoto},
 	 hobby = #{hobby} -->
	where userId = #{userId}
 	  </update>
 
 	 <select id="findId" parameterType="HashMap" resultType="MemberDTO" >
    	select *
    	from member
    	where userName = #{findName} and email1 = #{findEmail1} and email2 = #{findEmail2}
     </select>
 	 
 	 <select id="findPw" parameterType="HashMap" resultType="MemberDTO" >
    	select *
    	from member
    	where userId = #{findId} and email1 = #{findEmail1} and email2 = #{findEmail2}
     </select>
 	 
 	 <update id="newPw"  parameterType="HashMap">
 	 	update member set
 	 	userPasswd = #{newPw}
 	 	where userId = #{userId}
 	 </update>
 	 
 	 <select id="totalCount" parameterType="hashmap" resultType="int">
     	select count(*)
      	from member
       	<where>
	  		<if test="searchName == 'nickname'">
	       		upper(nickname)  like  upper('%'||#{searchValue}||'%') 
	  		</if>
	  		<if test="searchName == 'address'">
	     		 address2 like '%'||#{searchValue}||'%'
	 		</if>
     	</where>
      </select>
    
      <select id="search" parameterType="hashmap" resultType="MemberDTO">
		select *
      	from member
       	<where>
	  		<if test="searchName == 'nickname'">
	       		upper(nickname)  like  upper('%'||#{searchValue}||'%')
	  		</if>
	  		<if test="searchName == 'address'">
	     		 address2 like '%'||#{searchValue}||'%'
	 		</if>
	 	</where>
			<if test="order == 'asc'">
	       		order by userId asc
	  		</if>
	  		<if test="order == 'desc'">
	     		order by userId desc
	 		</if>
	  </select>
    
      <select id="fileName" parameterType="String" resultType="String" >
    	select profilePhoto
    	from member
    	where userId = #{userId}
     </select>
</mapper>